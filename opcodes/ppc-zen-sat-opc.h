#ifndef PPC_ZEN_SAT_H
#define PPC_ZEN_SAT_H

const struct powerpc_opcode ppczensat_opcodes[] = {
{"addb",        VX (0x1f,0x394),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addb.",       VX (0x1f,0x395),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addbss",      VX (0x1f,0x3d4),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addbss.",     VX (0x1f,0x3d5),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addbu",       VX (0x1f,0x794),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addbu.",      VX (0x1f,0x795),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addbus",      VX (0x1f,0x7d4),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addbus.",     VX (0x1f,0x7d5),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addh",        VX (0x1f,0x314),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addh.",       VX (0x1f,0x315),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addhss",      VX (0x1f,0x354),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addhss.",     VX (0x1f,0x355),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addhu",       VX (0x1f,0x714),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addhu.",      VX (0x1f,0x715),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addhus",      VX (0x1f,0x754),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addhus.",     VX (0x1f,0x755),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addwss",      VX (0x1f,0x2d4),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addwss.",     VX (0x1f,0x2d5),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addwus",      VX (0x1f,0x6d4),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"addwus.",     VX (0x1f,0x6d5),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},

{"divw",        VX (0x1f,0x3d6),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divw.",       VX (0x1f,0x3d7),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divwo",       VX (0x1f,0x7d6),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divwo.",      VX (0x1f,0x7d7),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divwu",       VX (0x1f,0x396),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divwu.",      VX (0x1f,0x397),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divwuo",      VX (0x1f,0x796),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divwuo.",     VX (0x1f,0x797),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divwe",       VX (0x1f,0x356),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divwe.",      VX (0x1f,0x357),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divweo",      VX (0x1f,0x756),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divweo.",     VX (0x1f,0x757),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divweu",      VX (0x1f,0x316),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divweu.",     VX (0x1f,0x317),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divweuo",     VX (0x1f,0x716),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divweuo.",    VX (0x1f,0x717),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divdwo",      VX (0x1f,0x296),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"divdwuo",     VX (0x1f,0x696),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},

{"mulhss",      VX (0x1f,0x256),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"mulhss.",     VX (0x1f,0x257),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"mulhus",      VX (0x1f,0x656),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"mulhus.",     VX (0x1f,0x657),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"mulwss",      VX (0x1f,0x2d6),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"mulwss.",     VX (0x1f,0x2d7),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"mulwus",      VX (0x1f,0x6d6),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"mulwus.",     VX (0x1f,0x6d7),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},

{"sat",		VX (0x1f,0x210),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, SS,IU,OU,SA}},
{"sat.",	VX (0x1f,0x211),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, SS,IU,OU,SA}},

{"subfb",       VX (0x1f,0x390),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfb.",      VX (0x1f,0x391),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfbss",     VX (0x1f,0x3d0),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfbss.",    VX (0x1f,0x3d1),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfbu",      VX (0x1f,0x790),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfbu.",     VX (0x1f,0x791),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfbus",     VX (0x1f,0x7d0),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfbus.",    VX (0x1f,0x7d1),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfh",       VX (0x1f,0x310),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfh.",      VX (0x1f,0x311),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfhss",     VX (0x1f,0x350),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfhss.",    VX (0x1f,0x351),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfhu",      VX (0x1f,0x710),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfhu.",     VX (0x1f,0x711),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfhus",     VX (0x1f,0x750),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfhus.",    VX (0x1f,0x751),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfwss",     VX (0x1f,0x2d0),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfwss.",    VX (0x1f,0x2d1),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfwus",     VX (0x1f,0x6d0),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
{"subfwus.",    VX (0x1f,0x6d1),   VX_MASK,     PPCZENSAT,    PPCNONE,        {RS, RA, RB}},
};

#endif // PPC_ZEN_410_H
